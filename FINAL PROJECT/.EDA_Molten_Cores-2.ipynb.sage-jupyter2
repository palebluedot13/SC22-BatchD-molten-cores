{"backend_state":"init","connection_file":"/projects/803caf18-2f52-4012-a187-684798bd4465/.local/share/jupyter/runtime/kernel-f8ceb009-1303-40fb-8a41-aa948295086f.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"074b5a","input":"","pos":24,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"07db06","input":"","pos":23,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"10b594","input":"","pos":32,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"167736","input":"","pos":13,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"1c4cff","input":"","pos":29,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"1d4210","input":"","pos":33,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"1f6c23","input":"","pos":44,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"233d9b","input":"import matplotlib.pyplot as plt\n\n\nhappin.plot.scatter(x='Flipper Length (mm)', y='Culmen Depth (mm)', c='DarkBlue')","pos":45,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"2703bd","input":"","pos":48,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"28760e","input":"","pos":9,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"37a74e","input":"","pos":37,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"4bbd0f","input":"","pos":21,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"4fd549","input":"","pos":34,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"54e2e2","input":"","pos":18,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"606885","input":"","pos":20,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"62a1d7","input":"","pos":14,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"751484","input":"","pos":10,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"761869","input":"","pos":40,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"902b7e","input":"","pos":49,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"9f2882","input":"","pos":8,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"a65e86","input":"","pos":50,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"b89a9c","input":"","pos":17,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"c04175","input":"","pos":7,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"d3c9b7","input":"happiness_report[happiness_report[\"Healthy life expectancy\"] == \"Netherlands\"","pos":47,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"df34ef","input":"","pos":31,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"e216fd","input":"","pos":19,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"e33821","input":"","pos":35,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"e72826","input":"","pos":39,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"ec5011","input":"","pos":41,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f093f8","input":"","pos":42,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f1a07a","input":"","pos":16,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f36f5a","input":"","pos":38,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f75015","input":"","pos":22,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f90138","input":"#pie chart","pos":46,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"fc58d9","input":"","pos":11,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"fdb9a7","input":"","pos":15,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"1bfdc8","input":"test_list = [item for item in suicide_risk[\"gender\"].value_counts().values]","pos":4,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"3b8bbc","input":"test_list","output":{"0":{"data":{"text/plain":"[393, 73, 2, 1]"},"exec_count":13,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"2024e5","input":"suicide_risk[\"gender\"].value_counts()","output":{"0":{"data":{"text/plain":"Male                  393\nFemale                 73\nTransgender male        2\nTransgender female      1\nName: gender, dtype: int64"},"exec_count":14,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"c6bea7","input":"suicide_risk[suicide_risk.improve_yourself_how.str.contains(\"Therapy\")][\"improve_yourself_how\"].value_counts()","output":{"0":{"data":{"text/plain":"Therapy                                                                                                                                                                                21\nJoined a gym/go to the gym, Therapy                                                                                                                                                    20\nJoined a gym/go to the gym, Therapy, Other exercise, join clubs/socual clubs/meet ups                                                                                                  20\nTherapy, Other exercise                                                                                                                                                                16\nJoined a gym/go to the gym, Therapy, join clubs/socual clubs/meet ups                                                                                                                  10\nTherapy, Other exercise, join clubs/socual clubs/meet ups                                                                                                                              10\nTherapy, join clubs/socual clubs/meet ups                                                                                                                                               7\nCosmetic survey, Joined a gym/go to the gym, Therapy, Other exercise, join clubs/socual clubs/meet ups                                                                                  3\nCosmetic survey, Joined a gym/go to the gym, Therapy, Other exercise                                                                                                                    3\nJoined a gym/go to the gym, Therapy, Other exercise                                                                                                                                     3\nCosmetic survey, Joined a gym/go to the gym, Therapy                                                                                                                                    2\nCosmetic survey, Joined a gym/go to the gym, Therapy, join clubs/socual clubs/meet ups                                                                                                  2\nCosmetic survey, Joined a gym/go to the gym, Therapy, Other exercise, join clubs/socual clubs/meet ups, Fashion makeup personality etc                                                  1\nTherapy, Other exercise, None                                                                                                                                                           1\nCosmetic survey, Therapy, join clubs/socual clubs/meet ups                                                                                                                              1\nCosmetic survey, Therapy                                                                                                                                                                1\nJoined a gym/go to the gym, Therapy, Self analysis                                                                                                                                      1\nTherapy, join clubs/socual clubs/meet ups, None, Volunteering, social activism, traveling                                                                                               1\nTherapy, Other exercise, diets, change of wardrobe, medication, diet pills                                                                                                              1\nTherapy, join clubs/socual clubs/meet ups, medication                                                                                                                                   1\nJoined a gym/go to the gym, Therapy, Joined a German language learning course.                                                                                                          1\nTherapy, Other exercise, Develop hobbies                                                                                                                                                1\nJoined a gym/go to the gym, Therapy, Clubbing, living in a student house (at dorms)                                                                                                     1\nCosmetic survey, Therapy, Other exercise, forced myself to free events or events w/acquintances advertised in fb; been part of a blog for five years and met some members in person     1\nCosmetic surgery, Joined a gym/go to the gym, Therapy, Other exercise, join clubs/socual clubs/meet ups, None                                                                           1\nName: improve_yourself_how, dtype: int64"},"exec_count":16,"output_type":"execute_result"}},"pos":36,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"557b2a","input":"import seaborn as sns","pos":25,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"379a56","input":"import plotly.express as px\n \n\nfig = px.bar(suicide_risk, x=\"race\", y=\"age\", color=\"attempt_suicide\", barmode = 'stack')\n \nfig.show()","output":{"0":{"data":{"iframe":"c2a33b7d06a0ab4982f5b04df72da6c5ea38eb7d"},"exec_count":21,"output_type":"execute_result"}},"pos":27,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"af9f6f","input":"px.scatter_3d(happiness_report, x = 'Social support', y = 'Freedom to make life choices', z = 'Score', color = '#1f77b4')","output":{"0":{"ename":"ValueError","evalue":"Value of 'color' is not the name of a column in 'data_frame'. Expected one of ['Country or region', 'Score', 'Social support', 'Healthy life expectancy', 'Freedom to make life choices', 'Generosity', 'Perceptions of corruption'] but received: #1f77b4","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","Input \u001b[0;32mIn [21]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43mpx\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mscatter_3d\u001b[49m\u001b[43m(\u001b[49m\u001b[43mhappiness_report\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mx\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mSocial support\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mFreedom to make life choices\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mz\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mScore\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcolor\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43m#1f77b4\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/plotly/express/_chart_types.py:762\u001b[0m, in \u001b[0;36mscatter_3d\u001b[0;34m(data_frame, x, y, z, color, symbol, size, text, hover_name, hover_data, custom_data, error_x, error_x_minus, error_y, error_y_minus, error_z, error_z_minus, animation_frame, animation_group, category_orders, labels, size_max, color_discrete_sequence, color_discrete_map, color_continuous_scale, range_color, color_continuous_midpoint, symbol_sequence, symbol_map, opacity, log_x, log_y, log_z, range_x, range_y, range_z, title, template, width, height)\u001b[0m\n\u001b[1;32m    716\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mscatter_3d\u001b[39m(\n\u001b[1;32m    717\u001b[0m     data_frame\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[1;32m    718\u001b[0m     x\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    756\u001b[0m     height\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[1;32m    757\u001b[0m ):\n\u001b[1;32m    758\u001b[0m     \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m    759\u001b[0m \u001b[38;5;124;03m    In a 3D scatter plot, each row of `data_frame` is represented by a\u001b[39;00m\n\u001b[1;32m    760\u001b[0m \u001b[38;5;124;03m    symbol mark in 3D space.\u001b[39;00m\n\u001b[1;32m    761\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m--> 762\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mmake_figure\u001b[49m\u001b[43m(\u001b[49m\u001b[43margs\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mlocals\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mconstructor\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mgo\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mScatter3d\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/plotly/express/_core.py:1945\u001b[0m, in \u001b[0;36mmake_figure\u001b[0;34m(args, constructor, trace_patch, layout_patch)\u001b[0m\n\u001b[1;32m   1942\u001b[0m layout_patch \u001b[38;5;241m=\u001b[39m layout_patch \u001b[38;5;129;01mor\u001b[39;00m {}\n\u001b[1;32m   1943\u001b[0m apply_default_cascade(args)\n\u001b[0;32m-> 1945\u001b[0m args \u001b[38;5;241m=\u001b[39m \u001b[43mbuild_dataframe\u001b[49m\u001b[43m(\u001b[49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mconstructor\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1946\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m constructor \u001b[38;5;129;01min\u001b[39;00m [go\u001b[38;5;241m.\u001b[39mTreemap, go\u001b[38;5;241m.\u001b[39mSunburst, go\u001b[38;5;241m.\u001b[39mIcicle] \u001b[38;5;129;01mand\u001b[39;00m args[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mpath\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m   1947\u001b[0m     args \u001b[38;5;241m=\u001b[39m process_dataframe_hierarchy(args)\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/plotly/express/_core.py:1405\u001b[0m, in \u001b[0;36mbuild_dataframe\u001b[0;34m(args, constructor)\u001b[0m\n\u001b[1;32m   1402\u001b[0m     args[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcolor\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m   1403\u001b[0m \u001b[38;5;66;03m# now that things have been prepped, we do the systematic rewriting of `args`\u001b[39;00m\n\u001b[0;32m-> 1405\u001b[0m df_output, wide_id_vars \u001b[38;5;241m=\u001b[39m \u001b[43mprocess_args_into_dataframe\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   1406\u001b[0m \u001b[43m    \u001b[49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mwide_mode\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvar_name\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvalue_name\u001b[49m\n\u001b[1;32m   1407\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1409\u001b[0m \u001b[38;5;66;03m# now that `df_output` exists and `args` contains only references, we complete\u001b[39;00m\n\u001b[1;32m   1410\u001b[0m \u001b[38;5;66;03m# the special-case and wide-mode handling by further rewriting args and/or mutating\u001b[39;00m\n\u001b[1;32m   1411\u001b[0m \u001b[38;5;66;03m# df_output\u001b[39;00m\n\u001b[1;32m   1413\u001b[0m count_name \u001b[38;5;241m=\u001b[39m _escape_col_name(df_output, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcount\u001b[39m\u001b[38;5;124m\"\u001b[39m, [var_name, value_name])\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/plotly/express/_core.py:1207\u001b[0m, in \u001b[0;36mprocess_args_into_dataframe\u001b[0;34m(args, wide_mode, var_name, value_name)\u001b[0m\n\u001b[1;32m   1205\u001b[0m         \u001b[38;5;28;01mif\u001b[39;00m argument \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mindex\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n\u001b[1;32m   1206\u001b[0m             err_msg \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124m To use the index, pass it in directly as `df.index`.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m-> 1207\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(err_msg)\n\u001b[1;32m   1208\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m length \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(df_input[argument]) \u001b[38;5;241m!=\u001b[39m length:\n\u001b[1;32m   1209\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[1;32m   1210\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mAll arguments should have the same length. \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m   1211\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mThe length of column argument `df[\u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[38;5;124m]` is \u001b[39m\u001b[38;5;132;01m%d\u001b[39;00m\u001b[38;5;124m, whereas the \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   1218\u001b[0m         )\n\u001b[1;32m   1219\u001b[0m     )\n","\u001b[0;31mValueError\u001b[0m: Value of 'color' is not the name of a column in 'data_frame'. Expected one of ['Country or region', 'Score', 'Social support', 'Healthy life expectancy', 'Freedom to make life choices', 'Generosity', 'Perceptions of corruption'] but received: #1f77b4"]}},"pos":43,"type":"cell"}
{"cell_type":"code","exec_count":24,"id":"4a81c7","input":"#LMAO GOOD LUCK ! - XGBOOST\n\n#I don't need luck for where I'm cleaning ! - Certified Data Janitor\n\n\ncolumns_to_drop = [\"time\"]\nsuicide_risk.drop(columns_to_drop, axis=1, inplace=True)\n\nrace_freq = (suicide_risk['race'].value_counts())/suicide_risk.shape[0]\nless_freq_race = race_freq[race_freq<=0.04]\nsuicide_risk.loc[suicide_risk['race'].isin(less_freq_race.index.tolist()), \"race\"] = \"other\"\nsuicide_risk[\"race\"].value_counts()\n\npaysex_freq = (suicide_risk['pay_for_sex'].value_counts())/suicide_risk.shape[0]\nless_freq_paysex = paysex_freq[paysex_freq<=0.3]\nsuicide_risk.loc[suicide_risk['pay_for_sex'].isin(less_freq_paysex.index.tolist()), \"pay_for_sex\"] = \"Yes\"\nsuicide_risk[\"pay_for_sex\"].value_counts()\n\nsxlty_freq = (suicide_risk['sexuallity'].value_counts())/suicide_risk.shape[0]\nless_freq_sxlty = sxlty_freq[sxlty_freq<=0.1]\nsuicide_risk.loc[suicide_risk['sexuallity'].isin(less_freq_sxlty.index.tolist()), \"sexuallity\"] = \"Bi/Gay/Lesbian\"\nsuicide_risk[\"sexuallity\"].value_counts()\n\nhelp_freq = (suicide_risk['what_help_from_others'].value_counts())/suicide_risk.shape[0]\nless_freq_help = help_freq[help_freq<=0.15]\nsuicide_risk.loc[suicide_risk['what_help_from_others'].isin(less_freq_help.index.tolist()), \"what_help_from_others\"] = \"Some form of help\"\nsuicide_risk[\"what_help_from_others\"].value_counts()\n\nsuicide_risk = suicide_risk.replace({'employment':  {'A homemaker': \"Employed\", 'Retired': \"Unemployed\", 'Military': \"Employed\", 'Unable to work': \"Unemployed\", 'Self-employed': \"Employed\", 'Out of work and looking for work': \"Unemployed\", 'Out of work but not currently looking for work': \"Unemployed\", 'Employed for wages': \"Employed\", 'A student': \"Student\"}})\n\nsuicide_risk.loc[suicide_risk['gender'].isin([\"Transgender female\"]),\"gender\"] = \"Female\"\nsuicide_risk.loc[suicide_risk['gender'].isin([\"Transgender male\"]),\"gender\"] = \"Male\"\n\nsuicide_risk =suicide_risk.astype({\"improve_yourself_how\": str})\n\nsuicide_risk.loc[suicide_risk.improve_yourself_how.str.contains(\"Therapy\"), \"improve_yourself_how\"] = \"Therapy\"\nsuicide_risk.loc[suicide_risk.improve_yourself_how.str.contains(\"gym\"), \"improve_yourself_how\"] = \"Go to/join a gym\"\n\nimprove_freq = (suicide_risk['improve_yourself_how'].value_counts())/suicide_risk.shape[0]\nless_freq_improve = improve_freq[improve_freq<=0.2]\nsuicide_risk.loc[suicide_risk['improve_yourself_how'].isin(less_freq_improve.index.tolist()), \"improve_yourself_how\"] = \"Other\"\nsuicide_risk[\"improve_yourself_how\"].value_counts()","output":{"0":{"data":{"text/plain":"Therapy             130\nGo to/join a gym    124\nOther               109\nNone                106\nName: improve_yourself_how, dtype: int64"},"exec_count":24,"output_type":"execute_result"}},"pos":30,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"508738","input":"import pandas as pd\nfrom matplotlib import cm\nimport matplotlib.pyplot as plt\n\n\n# Data to plot\nplotdata = pd.DataFrame({\n    \"f1_score_0\":[0.58, 0.77, 0.69, 0.81, 0.81],\n    \"f1_score_1\":[0.36, 0.44, 0.37, 0.41, 0.37],\n    \"accuracy\":[0.49, 0.67, 0.59, 0.72, 0.71]}, \n    index=[\"SVC\", \"Logistic Regression\", \"KNN\", \"Random Forest\", \"XGBoost\"])\n\n# Plotting\nplotdata.plot(kind=\"bar\", figsize = (20,10), colormap = cm.get_cmap('rainbow'))\n\n\n# Titles\nplt.title(\"Scores Graph\", size = 22)\nplt.xlabel(\"Models\", size = 16)\nplt.ylabel(\"Scores\", size = 16)","output":{"0":{"data":{"text/plain":"Text(0, 0.5, 'Scores')"},"exec_count":3,"output_type":"execute_result"},"1":{"data":{"image/png":"8ca012f44e16ca13155365d922c976dfd4203e7c","text/plain":"<Figure size 1440x720 with 1 Axes>"},"exec_count":3,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":12,"type":"cell"}
{"cell_type":"code","exec_count":30,"id":"9804b0","input":"# sns.violinplot(x ='attempt_suicide', y ='age', data = suicide_risk)\nsns.swarmplot(x ='attempt_suicide', y ='age', data = suicide_risk)","output":{"0":{"name":"stderr","output_type":"stream","text":"/projects/803caf18-2f52-4012-a187-684798bd4465/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/categorical.py:1296: UserWarning:\n\n39.8% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n\n"},"1":{"data":{"text/plain":"<AxesSubplot:xlabel='attempt_suicide', ylabel='age'>"},"exec_count":30,"output_type":"execute_result"},"2":{"data":{"image/png":"4eaef519f44df9a9d16d2866f07f8e6939ceb6b7","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":30,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":28,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"9190c4","input":"import pandas as pd\nimport plotly.figure_factory as ff\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn.preprocessing import LabelEncoder\nsuicide_risk = pd.read_csv(\"foreveralone.csv\")","pos":2,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"e36187","input":"suicide_risk.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>time</th>\n      <th>gender</th>\n      <th>sexuallity</th>\n      <th>age</th>\n      <th>income</th>\n      <th>race</th>\n      <th>bodyweight</th>\n      <th>virgin</th>\n      <th>prostitution_legal</th>\n      <th>pay_for_sex</th>\n      <th>friends</th>\n      <th>social_fear</th>\n      <th>depressed</th>\n      <th>what_help_from_others</th>\n      <th>attempt_suicide</th>\n      <th>employment</th>\n      <th>job_title</th>\n      <th>edu_level</th>\n      <th>improve_yourself_how</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5/17/2016 20:04:18</td>\n      <td>Male</td>\n      <td>Straight</td>\n      <td>35</td>\n      <td>$30,000 to $39,999</td>\n      <td>White non-Hispanic</td>\n      <td>Normal weight</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>No</td>\n      <td>0.0</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>wingman/wingwoman, Set me up with a date</td>\n      <td>Yes</td>\n      <td>Employed for wages</td>\n      <td>mechanical drafter</td>\n      <td>Associate degree</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5/17/2016 20:04:30</td>\n      <td>Male</td>\n      <td>Bisexual</td>\n      <td>21</td>\n      <td>$1 to $10,000</td>\n      <td>White non-Hispanic</td>\n      <td>Underweight</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>No</td>\n      <td>0.0</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>wingman/wingwoman, Set me up with a date, date...</td>\n      <td>No</td>\n      <td>Out of work and looking for work</td>\n      <td>-</td>\n      <td>Some college, no degree</td>\n      <td>join clubs/socual clubs/meet ups</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5/17/2016 20:04:58</td>\n      <td>Male</td>\n      <td>Straight</td>\n      <td>22</td>\n      <td>$0</td>\n      <td>White non-Hispanic</td>\n      <td>Overweight</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>No</td>\n      <td>10.0</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>I don't want help</td>\n      <td>No</td>\n      <td>Out of work but not currently looking for work</td>\n      <td>unemployed</td>\n      <td>Some college, no degree</td>\n      <td>Other exercise</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5/17/2016 20:08:01</td>\n      <td>Male</td>\n      <td>Straight</td>\n      <td>19</td>\n      <td>$1 to $10,000</td>\n      <td>White non-Hispanic</td>\n      <td>Overweight</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>8.0</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>date coaching</td>\n      <td>No</td>\n      <td>A student</td>\n      <td>student</td>\n      <td>Some college, no degree</td>\n      <td>Joined a gym/go to the gym</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5/17/2016 20:08:04</td>\n      <td>Male</td>\n      <td>Straight</td>\n      <td>23</td>\n      <td>$30,000 to $39,999</td>\n      <td>White non-Hispanic</td>\n      <td>Overweight</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes and I have</td>\n      <td>10.0</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>I don't want help</td>\n      <td>No</td>\n      <td>Employed for wages</td>\n      <td>Factory worker</td>\n      <td>High school graduate, diploma or the equivalen...</td>\n      <td>None</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                 time gender sexuallity  age              income  \\\n0  5/17/2016 20:04:18   Male   Straight   35  $30,000 to $39,999   \n1  5/17/2016 20:04:30   Male   Bisexual   21       $1 to $10,000   \n2  5/17/2016 20:04:58   Male   Straight   22                  $0   \n3  5/17/2016 20:08:01   Male   Straight   19       $1 to $10,000   \n4  5/17/2016 20:08:04   Male   Straight   23  $30,000 to $39,999   \n\n                 race     bodyweight virgin prostitution_legal  \\\n0  White non-Hispanic  Normal weight    Yes                 No   \n1  White non-Hispanic    Underweight    Yes                 No   \n2  White non-Hispanic     Overweight    Yes                 No   \n3  White non-Hispanic     Overweight    Yes                Yes   \n4  White non-Hispanic     Overweight     No                 No   \n\n      pay_for_sex  friends social_fear depressed  \\\n0              No      0.0         Yes       Yes   \n1              No      0.0         Yes       Yes   \n2              No     10.0         Yes       Yes   \n3              No      8.0         Yes       Yes   \n4  Yes and I have     10.0          No       Yes   \n\n                               what_help_from_others attempt_suicide  \\\n0           wingman/wingwoman, Set me up with a date             Yes   \n1  wingman/wingwoman, Set me up with a date, date...              No   \n2                                  I don't want help              No   \n3                                      date coaching              No   \n4                                  I don't want help              No   \n\n                                       employment           job_title  \\\n0                              Employed for wages  mechanical drafter   \n1                Out of work and looking for work                   -   \n2  Out of work but not currently looking for work          unemployed   \n3                                       A student             student   \n4                              Employed for wages      Factory worker   \n\n                                           edu_level  \\\n0                                   Associate degree   \n1                            Some college, no degree   \n2                            Some college, no degree   \n3                            Some college, no degree   \n4  High school graduate, diploma or the equivalen...   \n\n               improve_yourself_how  \n0                              None  \n1  join clubs/socual clubs/meet ups  \n2                    Other exercise  \n3        Joined a gym/go to the gym  \n4                              None  "},"exec_count":5,"output_type":"execute_result"}},"pos":3,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"ca8479","input":"suicide_risk[\"attempt_suicide\"].value_counts().plot(kind=\"pie\")","output":{"0":{"data":{"text/plain":"<AxesSubplot:ylabel='attempt_suicide'>"},"exec_count":9,"output_type":"execute_result"},"1":{"data":{"image/png":"975a4fe27ac75562bfeae6782148f62dc5e5cf35","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":9,"output_type":"execute_result"}},"pos":26,"type":"cell"}
{"cell_type":"markdown","id":"bc2701","input":"# Molten-Cores\n\n#### Team Members: Arrisa, Evan, Maulika, Rafail, Sophia\n\n![img_happy](https://www.plays-in-business.com/wp-content/uploads/2018/12/the-happiness-index.jpg)\n\n","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"c14913","input":"## EDA: \n\n## Cleanup\n\n","pos":1,"type":"cell"}
{"id":0,"time":1661522714516,"type":"user"}
{"last_load":1661522713706,"type":"file"}