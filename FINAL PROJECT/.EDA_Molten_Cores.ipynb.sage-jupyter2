{"backend_state":"running","connection_file":"/projects/803caf18-2f52-4012-a187-684798bd4465/.local/share/jupyter/runtime/kernel-cbf7b5ba-ddb5-4c46-8ee8-86b2f3b62d92.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1660928899503,"exec_count":1,"id":"8746bb","input":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport plotly.express as px\nimport plotly.figure_factory as ff\nimport plotly.graph_objs as go\nimport seaborn as sns\nimport sklearn\nimport xgboost as xgb\n\n# pip install -U imbalanced-learn\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn import preprocessing\nfrom sklearn import svm\nfrom sklearn.datasets import load_boston\nfrom sklearn.datasets import make_classification\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import ConfusionMatrixDisplay\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier as KNN\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.svm import SVC\n\nsuicide_risk = pd.read_csv(\"foreveralone.csv\")","kernel":"ds_env","no_halt":true,"pos":4,"scrolled":true,"start":1660928897177,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928899784,"exec_count":2,"id":"a9b8b3","input":"# Correlation Plot\n\nplt.figure(figsize=(20,10))\n\nmat = suicide_risk.corr()\n\nsns.heatmap(mat, annot=True)\nplt.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"image/png":"ad5c1d62988e5ff4ef7c593b1c4faa553f0cd2c6","text/plain":"<Figure size 1440x720 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":7,"start":1660928899515,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928900059,"exec_count":3,"id":"2bf9eb","input":"# Violin Plot for Age\n\nplt.violinplot(suicide_risk['age'])","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"{'bodies': [<matplotlib.collections.PolyCollection at 0x7fe4c678b1f0>],\n 'cmaxes': <matplotlib.collections.LineCollection at 0x7fe4c678b340>,\n 'cmins': <matplotlib.collections.LineCollection at 0x7fe4c682b7c0>,\n 'cbars': <matplotlib.collections.LineCollection at 0x7fe4c682bd60>}"},"exec_count":3},"1":{"data":{"image/png":"e98328e99779c6f18a6778ccb0858ea4be906f7d","text/plain":"<Figure size 432x288 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":9,"start":1660928899792,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928900241,"exec_count":4,"id":"76da2c","input":"# Box Plot\n\nplt.figure(figsize=(10,5))\nsuicide_risk['age'].plot(kind='box')\nplt.title('Box Plot for Age')","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"Text(0.5, 1.0, 'Box Plot for Age')"},"exec_count":4},"1":{"data":{"image/png":"b8ed5ea2b69c85308880e8eda732a36c5507baf9","text/plain":"<Figure size 720x360 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":11,"start":1660928900064,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928905869,"exec_count":7,"id":"f68106","input":"plt.figure(figsize=(30,10))\nsns.histplot(x= 'age', y='bodyweight', data = suicide_risk, discrete = True,\n             color = 'red', edgecolor = 'black',\n             kde = True, kde_kws ={'cut': 2}, line_kws = {'linewidth': 4})\nplt.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"image/png":"ac6342217841dca9e34a929f3a32cca5054fd46c","text/plain":"<Figure size 2160x720 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":16,"start":1660928905653,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928907043,"exec_count":8,"id":"c924b4","input":"sns.displot(suicide_risk, x=\"age\", y=\"income\", log_scale=(True, False))","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"<seaborn.axisgrid.FacetGrid at 0x7fe4be4fb670>"},"exec_count":8},"1":{"data":{"image/png":"6ac77bb6eb9bdcf49e7a70d113aed96f4271ecd1","text/plain":"<Figure size 360x360 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":17,"start":1660928905895,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928909590,"exec_count":10,"id":"6e22bb","input":"# Number of friends and social fear barchart\n\nplt.figure(figsize = (30,10))\nplt.bar('friends', 'social_fear', data = suicide_risk, color = 'orange')\nplt.title('Friends vs Social Fear', size = 18)\nplt.xlabel('Friends', size = 16)\nplt.ylabel('Social Fear', fontsize = 22)\nplt.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"image/png":"c3a7b4866aba10580439fb2920176d7b9a82952a","text/plain":"<Figure size 2160x720 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":20,"start":1660928908502,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928910622,"exec_count":11,"id":"747b75","input":"#  Virginity and number of friends barchart\n\nplt.figure(figsize=(15,10))\nplt.bar('virgin', 'friends', data = suicide_risk, color = 'violet')\nplt.title('Virginity Vs Friends', size = 20)\nplt.xlabel('Virginity', size = 16)\nplt.ylabel('Friends', size = 16)\nplt.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"image/png":"04fb16873572e549b484674925f2fd40939ecd2c","text/plain":"<Figure size 1080x720 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":21,"start":1660928909613,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928911631,"exec_count":12,"id":"206b69","input":"#  Bodyweight and gender barchart\n\nplt.figure(figsize=(20,10))\nplt.bar('bodyweight', 'gender', data = suicide_risk, color = 'turquoise')\nplt.title('Bodyweight Vs Gender', size = 20)\nplt.xlabel('Bodyweight', size = 16)\nplt.ylabel('Gender', size = 16)\nplt.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"image/png":"10415d433812ea585a9a05281a365f9940513d10","text/plain":"<Figure size 1440x720 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":22,"start":1660928910631,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928911721,"exec_count":15,"id":"2fe5cd","input":"suicide_risk_numeric = suicide_risk.select_dtypes(exclude=np.number).columns","kernel":"ds_env","no_halt":true,"pos":27,"start":1660928911717,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928911765,"exec_count":16,"id":"bb4847","input":"suicide_risk[suicide_risk_numeric].head()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gender</th>\n      <th>sexuallity</th>\n      <th>income</th>\n      <th>race</th>\n      <th>bodyweight</th>\n      <th>virgin</th>\n      <th>prostitution_legal</th>\n      <th>pay_for_sex</th>\n      <th>social_fear</th>\n      <th>depressed</th>\n      <th>what_help_from_others</th>\n      <th>attempt_suicide</th>\n      <th>employment</th>\n      <th>job_title</th>\n      <th>edu_level</th>\n      <th>improve_yourself_how</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Male</td>\n      <td>Straight</td>\n      <td>$30,000 to $39,999</td>\n      <td>White non-Hispanic</td>\n      <td>Normal weight</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Some form of help</td>\n      <td>Yes</td>\n      <td>Employed</td>\n      <td>mechanical drafter</td>\n      <td>Associate degree</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Male</td>\n      <td>Bi/Gay/Lesbian</td>\n      <td>$1 to $10,000</td>\n      <td>White non-Hispanic</td>\n      <td>Underweight</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Some form of help</td>\n      <td>No</td>\n      <td>Unemployed</td>\n      <td>-</td>\n      <td>Some college, no degree</td>\n      <td>Other</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Male</td>\n      <td>Straight</td>\n      <td>$0</td>\n      <td>White non-Hispanic</td>\n      <td>Overweight</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>I don't want help</td>\n      <td>No</td>\n      <td>Unemployed</td>\n      <td>unemployed</td>\n      <td>Some college, no degree</td>\n      <td>Other</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Male</td>\n      <td>Straight</td>\n      <td>$1 to $10,000</td>\n      <td>White non-Hispanic</td>\n      <td>Overweight</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Some form of help</td>\n      <td>No</td>\n      <td>Student</td>\n      <td>student</td>\n      <td>Some college, no degree</td>\n      <td>Go to/join a gym</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Male</td>\n      <td>Straight</td>\n      <td>$30,000 to $39,999</td>\n      <td>White non-Hispanic</td>\n      <td>Overweight</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>I don't want help</td>\n      <td>No</td>\n      <td>Employed</td>\n      <td>Factory worker</td>\n      <td>High school graduate, diploma or the equivalen...</td>\n      <td>None</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"  gender      sexuallity              income                race  \\\n0   Male        Straight  $30,000 to $39,999  White non-Hispanic   \n1   Male  Bi/Gay/Lesbian       $1 to $10,000  White non-Hispanic   \n2   Male        Straight                  $0  White non-Hispanic   \n3   Male        Straight       $1 to $10,000  White non-Hispanic   \n4   Male        Straight  $30,000 to $39,999  White non-Hispanic   \n\n      bodyweight virgin prostitution_legal pay_for_sex social_fear depressed  \\\n0  Normal weight    Yes                 No          No         Yes       Yes   \n1    Underweight    Yes                 No          No         Yes       Yes   \n2     Overweight    Yes                 No          No         Yes       Yes   \n3     Overweight    Yes                Yes          No         Yes       Yes   \n4     Overweight     No                 No         Yes          No       Yes   \n\n  what_help_from_others attempt_suicide  employment           job_title  \\\n0     Some form of help             Yes    Employed  mechanical drafter   \n1     Some form of help              No  Unemployed                   -   \n2     I don't want help              No  Unemployed          unemployed   \n3     Some form of help              No     Student             student   \n4     I don't want help              No    Employed      Factory worker   \n\n                                           edu_level improve_yourself_how  \n0                                   Associate degree                 None  \n1                            Some college, no degree                Other  \n2                            Some college, no degree                Other  \n3                            Some college, no degree     Go to/join a gym  \n4  High school graduate, diploma or the equivalen...                 None  "},"exec_count":16}},"pos":28,"start":1660928911745,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928911789,"exec_count":17,"id":"16a034","input":"suicide_risk_numeric","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"Index(['gender', 'sexuallity', 'income', 'race', 'bodyweight', 'virgin',\n       'prostitution_legal', 'pay_for_sex', 'social_fear', 'depressed',\n       'what_help_from_others', 'attempt_suicide', 'employment', 'job_title',\n       'edu_level', 'improve_yourself_how'],\n      dtype='object')"},"exec_count":17}},"pos":29,"start":1660928911786,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928911827,"exec_count":18,"id":"744e6b","input":"label_encoder = LabelEncoder()\nfor i in suicide_risk_numeric:\n    suicide_risk[i] = label_encoder.fit_transform(suicide_risk[i])\nprint(\"Encoded data\")\nsuicide_risk.head()","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"Encoded data\n"},"1":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gender</th>\n      <th>sexuallity</th>\n      <th>age</th>\n      <th>income</th>\n      <th>race</th>\n      <th>bodyweight</th>\n      <th>virgin</th>\n      <th>prostitution_legal</th>\n      <th>pay_for_sex</th>\n      <th>friends</th>\n      <th>social_fear</th>\n      <th>depressed</th>\n      <th>what_help_from_others</th>\n      <th>attempt_suicide</th>\n      <th>employment</th>\n      <th>job_title</th>\n      <th>edu_level</th>\n      <th>improve_yourself_how</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>35</td>\n      <td>9</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>242</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0</td>\n      <td>21</td>\n      <td>1</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>4</td>\n      <td>6</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>1</td>\n      <td>22</td>\n      <td>0</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>10.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>271</td>\n      <td>6</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>19</td>\n      <td>1</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>8.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>262</td>\n      <td>6</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>1</td>\n      <td>23</td>\n      <td>9</td>\n      <td>3</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>10.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>61</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   gender  sexuallity  age  income  race  bodyweight  virgin  \\\n0       1           1   35       9     3           0       1   \n1       1           0   21       1     3           3       1   \n2       1           1   22       0     3           2       1   \n3       1           1   19       1     3           2       1   \n4       1           1   23       9     3           2       0   \n\n   prostitution_legal  pay_for_sex  friends  social_fear  depressed  \\\n0                   0            0      0.0            1          1   \n1                   0            0      0.0            1          1   \n2                   0            0     10.0            1          1   \n3                   1            0      8.0            1          1   \n4                   0            1     10.0            0          1   \n\n   what_help_from_others  attempt_suicide  employment  job_title  edu_level  \\\n0                      1                1           0        242          0   \n1                      1                0           2          4          6   \n2                      0                0           2        271          6   \n3                      1                0           1        262          6   \n4                      0                0           0         61          3   \n\n   improve_yourself_how  \n0                     1  \n1                     2  \n2                     2  \n3                     0  \n4                     1  "},"exec_count":18}},"pos":30,"start":1660928911797,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928911841,"exec_count":19,"id":"17c33d","input":"suicide_risk[\"attempt_suicide\"].value_counts()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"0    372\n1     85\nName: attempt_suicide, dtype: int64"},"exec_count":19}},"pos":31,"start":1660928911832,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928912081,"exec_count":24,"id":"8bca0a","input":"#SVC\nmy_model = svm.SVC()","kernel":"ds_env","no_halt":true,"pos":41,"start":1660928912080,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928912130,"exec_count":25,"id":"6d6633","input":"#Fit Data\nmy_model.fit(x_train, y_train)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC()</pre></div></div></div></div></div>","text/plain":"SVC()"},"exec_count":25}},"pos":42,"start":1660928912126,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928912153,"exec_count":26,"id":"9ae372","input":"#Predictions\ny_hat = my_model.predict(x_test)","kernel":"ds_env","no_halt":true,"pos":43,"start":1660928912148,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928912175,"exec_count":27,"id":"596fa2","input":"y_hat","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0])"},"exec_count":27}},"pos":44,"start":1660928912171,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928912191,"exec_count":28,"id":"fc7ae3","input":"np.array(y_test)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"array([0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0,\n       0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0,\n       0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0,\n       1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,\n       1, 0, 0, 0])"},"exec_count":28}},"pos":45,"start":1660928912180,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928912450,"exec_count":29,"id":"2b7265","input":"#Confusion Matrix\nplt.figure(figsize = (16,10), dpi = 80)\nsns.heatmap(confusion_matrix(y_test, y_hat), annot=True, fmt='g', cmap = 'coolwarm')","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":29},"1":{"data":{"image/png":"f0a3f1f718aaa3121ad6b8ebae24a86e6598ba7c","text/plain":"<Figure size 1280x800 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":46,"start":1660928912203,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928912514,"exec_count":31,"id":"f48f53","input":"#Predictions\n\ny_hat_svc_sm = my_model.predict(x_test)","kernel":"ds_env","no_halt":true,"pos":48,"start":1660928912502,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928912754,"exec_count":32,"id":"fceb74","input":"plt.figure(figsize = (16,10), dpi = 80)\nsns.heatmap(confusion_matrix(y_test, y_hat_svc_sm), annot=True, fmt='g', cmap = 'coolwarm')","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":32},"1":{"data":{"image/png":"fb2fc617e9662a6eb88a2e6c6eac24c35dcca1ba","text/plain":"<Figure size 1280x800 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":49,"start":1660928912531,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928912786,"exec_count":33,"id":"d93986","input":"# y_pred = logistic_regression.predict(x_test)\nprint(classification_report(y_test, y_hat))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       0.75      1.00      0.86        69\n           1       0.00      0.00      0.00        23\n\n    accuracy                           0.75        92\n   macro avg       0.38      0.50      0.43        92\nweighted avg       0.56      0.75      0.64        92\n\n"},"1":{"name":"stderr","text":"/projects/803caf18-2f52-4012-a187-684798bd4465/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, msg_start, len(result))\n/projects/803caf18-2f52-4012-a187-684798bd4465/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, msg_start, len(result))\n/projects/803caf18-2f52-4012-a187-684798bd4465/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, msg_start, len(result))\n"}},"pos":51,"start":1660928912763,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928913765,"exec_count":38,"id":"61cf58","input":"k = 7\nsuicide_KNN_model = KNN(n_neighbors=7)\nsuicide_risk.head()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gender</th>\n      <th>sexuallity</th>\n      <th>age</th>\n      <th>income</th>\n      <th>race</th>\n      <th>bodyweight</th>\n      <th>virgin</th>\n      <th>prostitution_legal</th>\n      <th>pay_for_sex</th>\n      <th>friends</th>\n      <th>social_fear</th>\n      <th>depressed</th>\n      <th>what_help_from_others</th>\n      <th>attempt_suicide</th>\n      <th>employment</th>\n      <th>job_title</th>\n      <th>edu_level</th>\n      <th>improve_yourself_how</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>35</td>\n      <td>9</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>242</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0</td>\n      <td>21</td>\n      <td>1</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>4</td>\n      <td>6</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>1</td>\n      <td>22</td>\n      <td>0</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>10.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>271</td>\n      <td>6</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>19</td>\n      <td>1</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>8.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>262</td>\n      <td>6</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>1</td>\n      <td>23</td>\n      <td>9</td>\n      <td>3</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>10.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>61</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   gender  sexuallity  age  income  race  bodyweight  virgin  \\\n0       1           1   35       9     3           0       1   \n1       1           0   21       1     3           3       1   \n2       1           1   22       0     3           2       1   \n3       1           1   19       1     3           2       1   \n4       1           1   23       9     3           2       0   \n\n   prostitution_legal  pay_for_sex  friends  social_fear  depressed  \\\n0                   0            0      0.0            1          1   \n1                   0            0      0.0            1          1   \n2                   0            0     10.0            1          1   \n3                   1            0      8.0            1          1   \n4                   0            1     10.0            0          1   \n\n   what_help_from_others  attempt_suicide  employment  job_title  edu_level  \\\n0                      1                1           0        242          0   \n1                      1                0           2          4          6   \n2                      0                0           2        271          6   \n3                      1                0           1        262          6   \n4                      0                0           0         61          3   \n\n   improve_yourself_how  \n0                     1  \n1                     2  \n2                     2  \n3                     0  \n4                     1  "},"exec_count":38}},"pos":56,"start":1660928913750,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928913785,"exec_count":39,"id":"ea8d5e","input":"suicide_KNN_model.fit(x_train, y_train)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=7)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=7)</pre></div></div></div></div></div>","text/plain":"KNeighborsClassifier(n_neighbors=7)"},"exec_count":39}},"pos":57,"start":1660928913774,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928914302,"exec_count":43,"id":"2a20eb","input":"#confusion matrix\nsns.heatmap(confusion_matrix(y_test, y_predict), annot=True, fmt='g')","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":43},"1":{"data":{"image/png":"bda69afcf345ed98fe5e97f6d772f40a9c43e4ae","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":59,"start":1660928913976,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928914327,"exec_count":44,"id":"c24130","input":"#classification report\nfrom sklearn.metrics import classification_report\nprint(classification_report(y_test, y_predict))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       0.75      1.00      0.86        69\n           1       0.00      0.00      0.00        23\n\n    accuracy                           0.75        92\n   macro avg       0.38      0.50      0.43        92\nweighted avg       0.56      0.75      0.64        92\n\n"},"1":{"name":"stderr","text":"/projects/803caf18-2f52-4012-a187-684798bd4465/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, msg_start, len(result))\n/projects/803caf18-2f52-4012-a187-684798bd4465/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, msg_start, len(result))\n/projects/803caf18-2f52-4012-a187-684798bd4465/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, msg_start, len(result))\n"}},"pos":60,"start":1660928914316,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928914594,"exec_count":47,"id":"541c42","input":"# param_grid = {\n#     'bootstrap': [True],\n#     'max_depth': [80],\n#     'max_features': [2],\n#     'min_samples_leaf': [3],\n#     'min_samples_split': [8],\n#     'n_estimators': [100]\n# }\n# rf = RandomForestClassifier()\n\n# grid_search = GridSearchCV(estimator = rf, param_grid = param_grid, cv = 3, n_jobs = -1, verbose = 2)\n# grid_search.fit(x_train, y_train)","kernel":"ds_env","no_halt":true,"pos":62,"start":1660928914589,"state":"done","type":"cell"}
{"cell_type":"code","end":1660928915507,"exec_count":49,"id":"1a3cb4","input":"rand_model.fit(x_train_sm, y_train_sm)\n\ny_pred_rand_sm = rand_model.predict(x_test)\nprint(y_pred_rand_sm)\nprint(np.array(y_test))\n\n\nprint(classification_report(y_test, y_pred_rand_sm))\n\nsns.heatmap(confusion_matrix(y_test, y_pred_rand_sm), annot=True, fmt='g')","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"[1 0 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0\n 1 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0]\n[0 0 1 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0\n 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 1 1 0 0 0 0 1 0 1 0 0 0 0 0\n 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0]\n              precision    recall  f1-score   support\n\n           0       0.80      0.83      0.81        69\n           1       0.43      0.39      0.41        23\n\n    accuracy                           0.72        92\n   macro avg       0.62      0.61      0.61        92\nweighted avg       0.71      0.72      0.71        92\n\n"},"1":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":49},"2":{"data":{"image/png":"4a174453d193116ac654d2dc03ddd7360fc965c6","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":64,"start":1660928915050,"state":"done","type":"cell"}
{"cell_type":"markdown","exec_count":0,"id":"b59b44","input":"## ONLY FOR XGBOOST FANS\n\n","pos":65,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"0af83b","input":"# RandomForest\n\n","pos":61,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"0d1eed","input":"### DONT TOUCH MY DUMMIES! >:(\n\n","pos":67,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"17ff63","input":"## Box Plot:","pos":10,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"216418","input":"# EDA plots:\n\n","pos":5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"2bab78","input":"## Violin Plot:","pos":8,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"4e4a74","input":"# Label Encoding\n\n","pos":26,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"724ed6","input":"## Overview of Project: \n\n- The Suicide Prevention Index uses data from the ForeverAlone dataset to effectively predict suicidal behaviors and thoughts based on gender, age, race, etc. \n- With this product, you are able to easily learn the key factors that contribute to suicide risk. Having this information on hand can help you recognize the signs of someone who is at risk of attempting suicide so that you can work to help prevent it before it becomes serious. \n- Prediction and an understanding of the causes of suicide is the most important factor for suicide prevention and treatment. The Suicide Prevention Index can help you save lives.\n\n\n","pos":2,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"7b897d","input":"## Importing Libraries\n\n","pos":3,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"81f86d","input":"# k-NN\n\n","pos":55,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"87009f","input":"## Bar Charts:","pos":18,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"9600df","input":"## SVC\n\n","pos":40,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"a8405e","input":"# Splitting the dataset:","pos":34,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"b0f88d","input":"## Classification Report\n\n","pos":50,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"b2ee00","input":"# Logistic Regression\n\n","pos":53,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"c3d15c","input":"# Molten-Cores\n\n#### Team Members: Arrisa, Evan, Maulika, Rafail, Sophia\n\n![img_happy](https://www.georgetownbehavioral.com/sites/default/files/georgetown-suicide-awareness.jpg)\n\n","pos":1,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"c93618","input":"## Density Plots:","pos":14,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d3b7af","input":"# Data Cleaning\n\n","pos":23,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d7ae41","input":"## Correlation Plot:\n\n","pos":6,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e77935","input":"# Oversampling using SMOTE:","pos":35.5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e852de","input":"# Training The Models:\n\n","pos":39,"state":"done","type":"cell"}
{"end":1660928905637,"exec_count":6,"id":"363bbb","input":"# Density Plot\n\nplt.figure(figsize = (16,10), dpi = 80)\nsns.kdeplot(suicide_risk['age'], color=\"deeppink\", shade = True, label = 'Age')\nsns.kdeplot(suicide_risk['income'], color=\"blueviolet\", shade = True, label = 'Income')\n\nplt.title('Density plot for Age and Income', fontsize = 22)\nplt.legend()\nplt.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"ename":"TypeError","evalue":"The x variable is categorical, but one of ['numeric', 'datetime'] is required","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [6]\u001b[0m, in \u001b[0;36m<cell line: 5>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m plt\u001b[38;5;241m.\u001b[39mfigure(figsize \u001b[38;5;241m=\u001b[39m (\u001b[38;5;241m16\u001b[39m,\u001b[38;5;241m10\u001b[39m), dpi \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m80\u001b[39m)\n\u001b[1;32m      4\u001b[0m sns\u001b[38;5;241m.\u001b[39mkdeplot(suicide_risk[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mage\u001b[39m\u001b[38;5;124m'\u001b[39m], color\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mdeeppink\u001b[39m\u001b[38;5;124m\"\u001b[39m, shade \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mTrue\u001b[39;00m, label \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mAge\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m----> 5\u001b[0m \u001b[43msns\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mkdeplot\u001b[49m\u001b[43m(\u001b[49m\u001b[43msuicide_risk\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mincome\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcolor\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mblueviolet\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mshade\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlabel\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mIncome\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m      7\u001b[0m plt\u001b[38;5;241m.\u001b[39mtitle(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mDensity plot for Age and Income\u001b[39m\u001b[38;5;124m'\u001b[39m, fontsize \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m22\u001b[39m)\n\u001b[1;32m      8\u001b[0m plt\u001b[38;5;241m.\u001b[39mlegend()\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/_decorators.py:46\u001b[0m, in \u001b[0;36m_deprecate_positional_args.<locals>.inner_f\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     36\u001b[0m     warnings\u001b[38;5;241m.\u001b[39mwarn(\n\u001b[1;32m     37\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mPass the following variable\u001b[39m\u001b[38;5;132;01m{}\u001b[39;00m\u001b[38;5;124m as \u001b[39m\u001b[38;5;132;01m{}\u001b[39;00m\u001b[38;5;124mkeyword arg\u001b[39m\u001b[38;5;132;01m{}\u001b[39;00m\u001b[38;5;124m: \u001b[39m\u001b[38;5;132;01m{}\u001b[39;00m\u001b[38;5;124m. \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m     38\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mFrom version 0.12, the only valid positional argument \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m     43\u001b[0m         \u001b[38;5;167;01mFutureWarning\u001b[39;00m\n\u001b[1;32m     44\u001b[0m     )\n\u001b[1;32m     45\u001b[0m kwargs\u001b[38;5;241m.\u001b[39mupdate({k: arg \u001b[38;5;28;01mfor\u001b[39;00m k, arg \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mzip\u001b[39m(sig\u001b[38;5;241m.\u001b[39mparameters, args)})\n\u001b[0;32m---> 46\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mf\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/distributions.py:1762\u001b[0m, in \u001b[0;36mkdeplot\u001b[0;34m(x, y, shade, vertical, kernel, bw, gridsize, cut, clip, legend, cumulative, shade_lowest, cbar, cbar_ax, cbar_kws, ax, weights, hue, palette, hue_order, hue_norm, multiple, common_norm, common_grid, levels, thresh, bw_method, bw_adjust, log_scale, color, fill, data, data2, warn_singular, **kwargs)\u001b[0m\n\u001b[1;32m   1752\u001b[0m \u001b[38;5;66;03m# Pack the kwargs for statistics.KDE\u001b[39;00m\n\u001b[1;32m   1753\u001b[0m estimate_kws \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mdict\u001b[39m(\n\u001b[1;32m   1754\u001b[0m     bw_method\u001b[38;5;241m=\u001b[39mbw_method,\n\u001b[1;32m   1755\u001b[0m     bw_adjust\u001b[38;5;241m=\u001b[39mbw_adjust,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   1759\u001b[0m     cumulative\u001b[38;5;241m=\u001b[39mcumulative,\n\u001b[1;32m   1760\u001b[0m )\n\u001b[0;32m-> 1762\u001b[0m \u001b[43mp\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_attach\u001b[49m\u001b[43m(\u001b[49m\u001b[43max\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mallowed_types\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mnumeric\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mdatetime\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlog_scale\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlog_scale\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1764\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m p\u001b[38;5;241m.\u001b[39munivariate:\n\u001b[1;32m   1766\u001b[0m     plot_kws \u001b[38;5;241m=\u001b[39m kwargs\u001b[38;5;241m.\u001b[39mcopy()\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/_core.py:1125\u001b[0m, in \u001b[0;36mVectorPlotter._attach\u001b[0;34m(self, obj, allowed_types, log_scale)\u001b[0m\n\u001b[1;32m   1120\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m var_type \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m allowed_types:\n\u001b[1;32m   1121\u001b[0m     err \u001b[38;5;241m=\u001b[39m (\n\u001b[1;32m   1122\u001b[0m         \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mThe \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mvar\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m variable is \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mvar_type\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m, but one of \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m   1123\u001b[0m         \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mallowed_types\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m is required\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m   1124\u001b[0m     )\n\u001b[0;32m-> 1125\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m(err)\n\u001b[1;32m   1127\u001b[0m \u001b[38;5;66;03m# Register with the matplotlib unit conversion machinery\u001b[39;00m\n\u001b[1;32m   1128\u001b[0m \u001b[38;5;66;03m# Perhaps cleaner to manage our own transform objects?\u001b[39;00m\n\u001b[1;32m   1129\u001b[0m \u001b[38;5;66;03m# XXX Currently this does not allow \"unshared\" categorical axes\u001b[39;00m\n\u001b[1;32m   1130\u001b[0m \u001b[38;5;66;03m# We could add metadata to a FacetGrid and set units based on that.\u001b[39;00m\n\u001b[1;32m   1131\u001b[0m \u001b[38;5;66;03m# See also comment in comp_data, which only uses a single axes to do\u001b[39;00m\n\u001b[1;32m   1132\u001b[0m \u001b[38;5;66;03m# its mapping, meaning that it won't handle unshared axes well either.\u001b[39;00m\n\u001b[1;32m   1133\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m ax \u001b[38;5;129;01min\u001b[39;00m ax_list:\n","\u001b[0;31mTypeError\u001b[0m: The x variable is categorical, but one of ['numeric', 'datetime'] is required"]},"1":{"data":{"image/png":"c50cb6b2b667f4ec7696a8fa43d68f991ace4aa1","text/plain":"<Figure size 1280x800 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":15,"start":1660928903805,"state":"done","type":"cell"}
{"end":1660928908486,"exec_count":9,"id":"2824bc","input":"# Age vs Income bar chart\n\nplt.figure(figsize=(30,10))\nplt.bar('age', 'income', data = suicide_risk)\nplt.title('Age Vs Income', size = 20)\nplt.xlabel('Age', size = 16)\nplt.ylabel('Income', size = 16)\nplt.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"image/png":"d1e237f8876c339989f427c3a41311a4a4a15279","text/plain":"<Figure size 2160x720 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":19,"start":1660928907051,"state":"done","type":"cell"}
{"end":1660928911708,"exec_count":14,"id":"89e76b","input":"#LMAO GOOD LUCK ! - XGBOOST\n\n#I don't need luck for where I'm cleaning ! - Certified Data Janitor\n\n\ncolumns_to_drop = [\"time\"]\nsuicide_risk.drop(columns_to_drop, axis=1, inplace=True)\n\nrace_freq = (suicide_risk['race'].value_counts())/suicide_risk.shape[0]\nless_freq_race = race_freq[race_freq<=0.04]\nsuicide_risk.loc[suicide_risk['race'].isin(less_freq_race.index.tolist()), \"race\"] = \"other\"\nsuicide_risk[\"race\"].value_counts()\n\npaysex_freq = (suicide_risk['pay_for_sex'].value_counts())/suicide_risk.shape[0]\nless_freq_paysex = paysex_freq[paysex_freq<=0.3]\nsuicide_risk.loc[suicide_risk['pay_for_sex'].isin(less_freq_paysex.index.tolist()), \"pay_for_sex\"] = \"Yes\"\nsuicide_risk[\"pay_for_sex\"].value_counts()\n\nsxlty_freq = (suicide_risk['sexuallity'].value_counts())/suicide_risk.shape[0]\nless_freq_sxlty = sxlty_freq[sxlty_freq<=0.1]\nsuicide_risk.loc[suicide_risk['sexuallity'].isin(less_freq_sxlty.index.tolist()), \"sexuallity\"] = \"Bi/Gay/Lesbian\"\nsuicide_risk[\"sexuallity\"].value_counts()\n\nhelp_freq = (suicide_risk['what_help_from_others'].value_counts())/suicide_risk.shape[0]\nless_freq_help = help_freq[help_freq<=0.15]\nsuicide_risk.loc[suicide_risk['what_help_from_others'].isin(less_freq_help.index.tolist()), \"what_help_from_others\"] = \"Some form of help\"\nsuicide_risk[\"what_help_from_others\"].value_counts()\n\nsuicide_risk = suicide_risk.replace({'employment':  {'A homemaker': \"Employed\", 'Retired': \"Unemployed\", 'Military': \"Employed\", 'Unable to work': \"Unemployed\", 'Self-employed': \"Employed\", 'Out of work and looking for work': \"Unemployed\", 'Out of work but not currently looking for work': \"Unemployed\", 'Employed for wages': \"Employed\", 'A student': \"Student\"}})\n\nsuicide_risk.loc[suicide_risk['gender'].isin([\"Transgender female\"]),\"gender\"] = \"Female\"\nsuicide_risk.loc[suicide_risk['gender'].isin([\"Transgender male\"]),\"gender\"] = \"Male\"\n\nsuicide_risk =suicide_risk.astype({\"improve_yourself_how\": str})\n\nsuicide_risk.loc[suicide_risk.improve_yourself_how.str.contains(\"Therapy\"), \"improve_yourself_how\"] = \"Therapy\"\nsuicide_risk.loc[suicide_risk.improve_yourself_how.str.contains(\"gym\"), \"improve_yourself_how\"] = \"Go to/join a gym\"\n\nimprove_freq = (suicide_risk['improve_yourself_how'].value_counts())/suicide_risk.shape[0]\nless_freq_improve = improve_freq[improve_freq<=0.2]\nsuicide_risk.loc[suicide_risk['improve_yourself_how'].isin(less_freq_improve.index.tolist()), \"improve_yourself_how\"] = \"Other\"\nsuicide_risk[\"improve_yourself_how\"].value_counts()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"Therapy             125\nGo to/join a gym    123\nOther               108\nNone                101\nName: improve_yourself_how, dtype: int64"},"exec_count":14}},"pos":25,"start":1660928911658,"state":"done","type":"cell"}
{"end":1660928911858,"exec_count":20,"id":"ab8322","input":"#Target\ntarget = suicide_risk[\"attempt_suicide\"]\n\ninput_columns = suicide_risk.loc[:, suicide_risk.columns != \"attempt_suicide\"]\n\n#Split\n\nsmt = SMOTE()\nx_train, x_test, y_train, y_test = train_test_split(input_columns, target, test_size=0.2, random_state=42)","kernel":"ds_env","no_halt":true,"pos":35,"start":1660928911852,"state":"done","type":"cell"}
{"end":1660928912008,"exec_count":21,"id":"bd66d0","input":"x_train_sm, y_train_sm = smt.fit_resample(x_train, y_train)\nprint(\"length of oversampled data is \",len(x_train_sm))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"length of oversampled data is  606\n"}},"pos":36,"start":1660928911869,"state":"done","type":"cell"}
{"end":1660928912042,"exec_count":22,"id":"e8b686","input":"y_train_sm.value_counts()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"0    303\n1    303\nName: attempt_suicide, dtype: int64"},"exec_count":22}},"pos":37,"start":1660928912028,"state":"done","type":"cell"}
{"end":1660928912065,"exec_count":23,"id":"bf2662","input":"y_train.value_counts()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"0    303\n1     62\nName: attempt_suicide, dtype: int64"},"exec_count":23}},"pos":38,"start":1660928912063,"state":"done","type":"cell"}
{"end":1660928912495,"exec_count":30,"id":"86d5e0","input":"# with SMOTE\nmy_model.fit(x_train_sm, y_train_sm)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC()</pre></div></div></div></div></div>","text/plain":"SVC()"},"exec_count":30}},"pos":47,"start":1660928912458,"state":"done","type":"cell"}
{"end":1660928912817,"exec_count":34,"id":"d056f4","input":"print(classification_report(y_test, y_hat_svc_sm))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       0.76      0.46      0.58        69\n           1       0.26      0.57      0.36        23\n\n    accuracy                           0.49        92\n   macro avg       0.51      0.51      0.47        92\nweighted avg       0.64      0.49      0.52        92\n\n"}},"pos":52,"start":1660928912798,"state":"done","type":"cell"}
{"end":1660928912922,"exec_count":35,"id":"604fd2","input":"logreg = LogisticRegression()                         # Step 2\nlogreg.fit(x_train, y_train)                          # Step 3\ny_pred = logreg.predict(x_test)                       # Step 4\n\n\nlogreg.fit(x_train_sm, y_train_sm)\ny_pred_logreg_sm = logreg.predict(x_test)\n\nnp.array(y_train)\n\n\nprint(classification_report(y_test, y_pred))\n\nprint(classification_report(y_test, y_pred_logreg_sm))\n\n","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       0.76      0.94      0.84        69\n           1       0.43      0.13      0.20        23\n\n    accuracy                           0.74        92\n   macro avg       0.60      0.54      0.52        92\nweighted avg       0.68      0.74      0.68        92\n\n              precision    recall  f1-score   support\n\n           0       0.82      0.72      0.77        69\n           1       0.39      0.52      0.44        23\n\n    accuracy                           0.67        92\n   macro avg       0.60      0.62      0.61        92\nweighted avg       0.71      0.67      0.69        92\n\n"},"1":{"name":"stderr","text":"/projects/803caf18-2f52-4012-a187-684798bd4465/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\nPlease also refer to the documentation for alternative solver options:\n    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n  n_iter_i = _check_optimize_result(\n/projects/803caf18-2f52-4012-a187-684798bd4465/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\nPlease also refer to the documentation for alternative solver options:\n    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n  n_iter_i = _check_optimize_result(\n"}},"pos":54,"start":1660928912821,"state":"done","type":"cell"}
{"end":1660928913464,"exec_count":36,"id":"669185","input":"plt.figure(figsize = (16,10), dpi = 80)\nsns.heatmap(confusion_matrix(y_test, y_pred), annot=True, fmt='g', cmap = 'coolwarm')","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":36},"1":{"data":{"image/png":"bc7c108d7794d7060ed54a2fd11d9ec62faa3986","text/plain":"<Figure size 1280x800 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":54.25,"start":1660928912934,"state":"done","type":"cell"}
{"end":1660928913733,"exec_count":37,"id":"bf861d","input":"plt.figure(figsize = (16,10), dpi = 80)\nsns.heatmap(confusion_matrix(y_test, y_pred_logreg_sm), annot=True, fmt='g', cmap = 'coolwarm')","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":37},"1":{"data":{"image/png":"3866aa6d2f4ed6558aada67808a1fa88f22700b8","text/plain":"<Figure size 1280x800 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":54.5,"start":1660928913474,"state":"done","type":"cell"}
{"end":1660928913811,"exec_count":40,"id":"77d407","input":"y_predict = suicide_KNN_model.predict(x_test)","kernel":"ds_env","no_halt":true,"pos":58,"start":1660928913792,"state":"done","type":"cell"}
{"end":1660928913864,"exec_count":41,"id":"4f3de6","input":"suicide_KNN_model.fit(x_train_sm, y_train_sm)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=7)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=7)</pre></div></div></div></div></div>","text/plain":"KNeighborsClassifier(n_neighbors=7)"},"exec_count":41}},"pos":58.375,"start":1660928913816,"state":"done","type":"cell"}
{"end":1660928913954,"exec_count":42,"id":"bd43c7","input":"y_predict_knn_sm = suicide_KNN_model.predict(x_test)","kernel":"ds_env","no_halt":true,"pos":58.5,"start":1660928913909,"state":"done","type":"cell"}
{"end":1660928914564,"exec_count":45,"id":"374ef6","input":"sns.heatmap(confusion_matrix(y_test, y_predict_knn_sm), annot=True, fmt='g')","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":45},"1":{"data":{"image/png":"665acb0d1212eb5289b4a77ed1761ade34fb427f","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":60.5,"start":1660928914344,"state":"done","type":"cell"}
{"end":1660928914583,"exec_count":46,"id":"c04701","input":"print(classification_report(y_test, y_predict_knn_sm))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       0.78      0.62      0.69        69\n           1       0.30      0.48      0.37        23\n\n    accuracy                           0.59        92\n   macro avg       0.54      0.55      0.53        92\nweighted avg       0.66      0.59      0.61        92\n\n"}},"pos":60.75,"start":1660928914576,"state":"done","type":"cell"}
{"end":1660928915039,"exec_count":48,"id":"6ebfa2","input":"# target = suicide_risk[\"attempt_suicide\"]\n# input_columns = suicide_risk.loc[:, suicide_risk.columns != \"attempt_suicide\"]\n# x_train, x_test, y_train, y_test = train_test_split(input_columns, target, test_size=0.2)\n\n# X = x_train_sm\n# y = y_train_sm\n\nrand_model = RandomForestClassifier(bootstrap=True, max_depth=80, max_features=2, min_samples_leaf=3, min_samples_split=8, n_estimators=100)\nrand_model.fit(x_train, y_train)\n\ny_pred = rand_model.predict(x_test)\nprint(y_pred)\nprint(np.array(y_test))\n\n\nprint(classification_report(y_test, y_pred))\n\nsns.heatmap(confusion_matrix(y_test, y_pred), annot=True, fmt='g')","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n[0 0 1 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0\n 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 1 1 0 0 0 0 1 0 1 0 0 0 0 0\n 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0]\n              precision    recall  f1-score   support\n\n           0       0.75      1.00      0.86        69\n           1       0.00      0.00      0.00        23\n\n    accuracy                           0.75        92\n   macro avg       0.38      0.50      0.43        92\nweighted avg       0.56      0.75      0.64        92\n\n"},"1":{"name":"stderr","text":"/projects/803caf18-2f52-4012-a187-684798bd4465/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, msg_start, len(result))\n/projects/803caf18-2f52-4012-a187-684798bd4465/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, msg_start, len(result))\n/projects/803caf18-2f52-4012-a187-684798bd4465/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, msg_start, len(result))\n"},"2":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":48},"3":{"data":{"image/png":"bda69afcf345ed98fe5e97f6d772f40a9c43e4ae","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":63,"start":1660928914599,"state":"done","type":"cell"}
{"end":1660928916172,"exec_count":53,"id":"2962aa","input":"y_train.value_counts()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"0    303\n1     62\nName: attempt_suicide, dtype: int64"},"exec_count":53}},"pos":66.1875,"start":1660928916163,"state":"done","type":"cell"}
{"end":1660928916182,"exec_count":54,"id":"17e937","input":"# x_train_sm_new = x_train_sm.drop(\"job_title\",axis=1)\n# x_test_new = x_test.drop(\"job_title\",axis=1)","kernel":"ds_env","no_halt":true,"pos":66.25,"start":1660928916177,"state":"done","type":"cell"}
{"end":1660928916784,"exec_count":55,"id":"8b8dad","input":"xg_reg.fit(x_train_sm,y_train_sm)\n\ny_pred_xgboost_sm = xg_reg.predict(x_test)\n\nprint(classification_report(y_test, y_pred_xgboost_sm))\n\nsns.heatmap(confusion_matrix(y_test, y_pred_xgboost_sm), annot=True, fmt='g', cmap = 'coolwarm')","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       0.79      0.83      0.81        69\n           1       0.40      0.35      0.37        23\n\n    accuracy                           0.71        92\n   macro avg       0.60      0.59      0.59        92\nweighted avg       0.69      0.71      0.70        92\n\n"},"1":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":55},"2":{"data":{"image/png":"c580de1a969bbba76b74414607d3a8885f5aecc8","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":66.5,"start":1660928916188,"state":"done","type":"cell"}
{"exec_count":13,"id":"ec48cf","input":"asuicide_risk = suicide_risk.dropna()\nsuicide_risk.isna().sum()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"time                     0\ngender                   0\nsexuallity               0\nage                      0\nincome                   0\nrace                     0\nbodyweight               0\nvirgin                   0\nprostitution_legal       0\npay_for_sex              0\nfriends                  0\nsocial_fear              0\ndepressed                0\nwhat_help_from_others    0\nattempt_suicide          0\nemployment               0\njob_title                0\nedu_level                0\nimprove_yourself_how     0\ndtype: int64"},"exec_count":13}},"pos":24,"state":"done","type":"cell"}
{"exec_count":56,"id":"a7e115","input":"# # target dummy\n\n# dummies = pd.get_dummies(suicide_risk[\"attempt_suicide\"])\n# suicide_risk[\"attempt_suicide\"] = dummies[\"Yes\"]\n\n# #dummies for prostitution legal\n\n# prostitution_legal_cleaning = pd.get_dummies(suicide_risk[\"prostitution_legal\"])\n# suicide_risk = pd.concat([suicide_risk.drop(['prostitution_legal'],axis=1), prostitution_legal_cleaning] , axis=1)\n# suicide_risk.rename(columns = {'Yes':'Legal Prostitution', 'No':'Not Legal Prostitution'}, inplace = True)\n\n# #dummies for virgin\n\n# virgin_cleaning = pd.get_dummies(suicide_risk[\"virgin\"])\n# suicide_risk = pd.concat([suicide_risk.drop(['virgin'],axis=1), virgin_cleaning] , axis=1)\n# suicide_risk.rename(columns = {'Yes':'Virgin', 'No':'Not Virgin'}, inplace = True)\n\n# #dummies for income\n\n# suicide_risk.loc[suicide_risk['income'].isin([\"$200,000 or more\"]),\"income\"] = \"$20,000 to $29,999\"\n# suicide_risk.loc[suicide_risk['income'].isin([\"$174,999 to $199,999\"]),\"income\"] = \"$20,000 to $29,999\"\n# suicide_risk.loc[suicide_risk['income'].isin([\"$150,000 to $174,999\"]),\"income\"] = \"$20,000 to $29,999\"\n# suicide_risk.loc[suicide_risk['income'].isin([\"$100,000 to $124,999\"]),\"income\"] = \"$20,000 to $29,999\"\n# suicide_risk.loc[suicide_risk['income'].isin([\"$125,000 to $149,999\"]),\"income\"] = \"$20,000 to $29,999\"\n# suicide_risk.loc[suicide_risk['income'].isin([\"$75,000 to $99,999\"]),\"income\"] = \"$20,000 to $29,999\"\n# suicide_risk.loc[suicide_risk['income'].isin([\"$40,000 to $49,999\"]),\"income\"] = \"$20,000 to $29,999\"\n# suicide_risk.loc[suicide_risk['income'].isin([\"$50,000 to $74,999\"]),\"income\"] = \"$20,000 to $29,999\"\n# suicide_risk.loc[suicide_risk['income'].isin([\"$30,000 to $39,999\"]),\"income\"] = \"$20,000 to $29,999\"\n\n# income_cleaning = pd.get_dummies(suicide_risk[\"income\"])\n# suicide_risk = pd.concat([suicide_risk.drop(['income'],axis=1), income_cleaning] , axis=1)\n\n# #dummies for employment\n\n# employment_cleaning = pd.get_dummies(suicide_risk[\"employment\"])\n# suicide_risk = pd.concat([suicide_risk.drop(['employment'],axis=1), employment_cleaning] , axis=1)\n\n# #dummies for what help from others\t\n\n# what_help_from_others_cleaning = pd.get_dummies(suicide_risk[\"what_help_from_others\"])\n# suicide_risk = pd.concat([suicide_risk.drop(['what_help_from_others'],axis=1), what_help_from_others_cleaning] , axis=1)\n\n# #dummmies for improve yourself how\n\n# improve_yourself_how_cleaning = pd.get_dummies(suicide_risk[\"improve_yourself_how\"])\n# suicide_risk = pd.concat([suicide_risk.drop(['improve_yourself_how'],axis=1), improve_yourself_how_cleaning] , axis=1)\n\n# suicide_risk.rename(columns = {'Other':'Other improvements', 'None':'Not improved'}, inplace = True)\n\n# #dummies for sexuallity\n\n# sexuallity_cleaning = pd.get_dummies(suicide_risk[\"sexuallity\"])\n# suicide_risk = pd.concat([suicide_risk.drop(['sexuallity'],axis=1), sexuallity_cleaning] , axis=1)\n\n# #dummies for gender\n\n# suicide_risk.loc[suicide_risk['gender'].isin([\"Transgender female\"]),\"gender\"] = \"Female\"\n# suicide_risk.loc[suicide_risk['gender'].isin([\"Transgender male\"]),\"gender\"] = \"Male\"\n\n# gender_cleaning = pd.get_dummies(suicide_risk[\"gender\"])\n# suicide_risk = pd.concat([suicide_risk.drop(['gender'],axis=1), gender_cleaning] , axis=1)\n\n# #dummies for depressed column\n\n# depressed_cleaning = pd.get_dummies(suicide_risk[\"depressed\"])\n# suicide_risk = pd.concat([suicide_risk.drop(['depressed'],axis=1), depressed_cleaning] , axis=1)\n\n# suicide_risk.rename(columns = {'Yes':'Depressed', 'No':'Not Depressed'}, inplace = True)\n\n# #dummies for social fear\n\n# social_fear_cleaning = pd.get_dummies(suicide_risk['social_fear'])\n# suicide_risk = pd.concat([suicide_risk.drop(['social_fear'], axis = 1), social_fear_cleaning], axis = 1)\n\n# suicide_risk.rename(columns = {'Yes':'Has social fear', 'No':'No Social Fear'}, inplace = True)\n\n# #dummies for payforsex\n\n# suicide_risk.loc[suicide_risk['pay_for_sex'].isin([\"Yes but I haven't\"]),\"pay_for_sex\"] = \"No\"\n\n# pay_for_sex_cleaning = pd.get_dummies(suicide_risk[\"pay_for_sex\"])\n# suicide_risk = pd.concat([suicide_risk.drop(['pay_for_sex'],axis=1), pay_for_sex_cleaning] , axis=1)\n\n# suicide_risk.rename(columns = {'Yes':'Yes and I have', 'No': 'No I have not'}, inplace = True)\n\n# #dummies for bodyweight\n\n# suicide_risk.loc[suicide_risk['bodyweight'].isin([\"Obese\"]),\"bodyweight\"] = \"Overweight\"\n\n# bodyweight_cleaning = pd.get_dummies(suicide_risk[\"bodyweight\"])\n\n# suicide_risk = pd.concat([suicide_risk.drop(['bodyweight'],axis=1), bodyweight_cleaning] , axis=1)\n\n# #dummies for race\n\n# race_cleaning = pd.get_dummies(suicide_risk[\"race\"])\n# suicide_risk = pd.concat([suicide_risk.drop(['race'],axis=1), race_cleaning] , axis=1)\n\n# suicide_risk_numeric = suicide_risk.select_dtypes(exclude=np.number).colum","kernel":"ds_env","no_halt":true,"pos":68,"state":"done","type":"cell"}
{"id":0,"time":1660929948476,"type":"user"}
{"last_load":1660917999813,"type":"file"}