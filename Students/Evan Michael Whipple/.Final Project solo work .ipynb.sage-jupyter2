{"backend_state":"init","connection_file":"/projects/803caf18-2f52-4012-a187-684798bd4465/.local/share/jupyter/runtime/kernel-a7f25a90-8051-4f25-b70b-8967acc92447.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"3968e6","input":"","pos":8,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"4f8f88","input":"","pos":11,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"640716","input":"","pos":20,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"855186","input":"","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"a33e4a","input":"","pos":17,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"d6795e","input":"","pos":16,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"e29bd5","input":"","pos":19,"type":"cell"}
{"cell_type":"code","exec_count":59,"id":"58aa9e","input":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport sklearn\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import preprocessing\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.model_selection import GridSearchCV\nsuicide_risk = pd.read_csv(\"foreveralone.csv\")","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":60,"id":"f1aea6","input":"suicide_risk_test = pd.read_csv(\"foreveralone.csv\") #cleaned data\nsuicide_risk_test2 = pd.read_csv(\"foreveralone.csv\") #cleaned and labelencoded data","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":61,"id":"12c1d8","input":"columns_to_drop = [\"time\"]\nsuicide_risk_test2.drop(columns_to_drop, axis=1, inplace=True)","pos":2,"type":"cell"}
{"cell_type":"code","exec_count":62,"id":"81b7ea","input":"suicide_risk_test2.columns","output":{"0":{"data":{"text/plain":"Index(['gender', 'sexuallity', 'age', 'income', 'race', 'bodyweight', 'virgin',\n       'prostitution_legal', 'pay_for_sex', 'friends', 'social_fear',\n       'depressed', 'what_help_from_others', 'attempt_suicide', 'employment',\n       'job_title', 'edu_level', 'improve_yourself_how'],\n      dtype='object')"},"exec_count":62,"output_type":"execute_result"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":63,"id":"d5e007","input":"race_freq = (suicide_risk_test['race'].value_counts())/suicide_risk_test.shape[0]\nless_freq_race = race_freq[race_freq<=0.04]\nsuicide_risk_test.loc[suicide_risk_test['race'].isin(less_freq_race.index.tolist()), \"race\"] = \"other\"\nsuicide_risk_test[\"race\"].value_counts()\n\n#paysex_freq = (suicide_risk_test['pay_for_sex'].value_counts())/suicide_risk_test.shape[0]\n#less_freq_paysex = paysex_freq[paysex_freq<=0.3]\n#suicide_risk_test.loc[suicide_risk_test['pay_for_sex'].isin(less_freq_paysex.index.tolist()), \"pay_for_sex\"] = \"Yes\"\n#suicide_risk_test[\"pay_for_sex\"].value_counts()\n\nsxlty_freq = (suicide_risk_test['sexuallity'].value_counts())/suicide_risk_test.shape[0]\nless_freq_sxlty = sxlty_freq[sxlty_freq<=0.1]\nsuicide_risk_test.loc[suicide_risk_test['sexuallity'].isin(less_freq_sxlty.index.tolist()), \"sexuallity\"] = \"Bi/Gay/Lesbian\"\nsuicide_risk_test[\"sexuallity\"].value_counts()\n\nhelp_freq = (suicide_risk_test['what_help_from_others'].value_counts())/suicide_risk_test.shape[0]\nless_freq_help = help_freq[help_freq<=0.15]\nsuicide_risk_test.loc[suicide_risk_test['what_help_from_others'].isin(less_freq_help.index.tolist()), \"what_help_from_others\"] = \"Some form of help\"\nsuicide_risk_test[\"what_help_from_others\"].value_counts()\n\nsuicide_risk_test = suicide_risk_test.replace({'employment':  {'A homemaker': \"Employed\", 'Retired': \"Unemployed\", 'Military': \"Employed\", 'Unable to work': \"Unemployed\", 'Self-employed': \"Employed\", 'Out of work and looking for work': \"Unemployed\", 'Out of work but not currently looking for work': \"Unemployed\", 'Employed for wages': \"Employed\", 'A student': \"Student\"}})\n\nsuicide_risk_test.loc[suicide_risk['gender'].isin([\"Transgender female\"]),\"gender\"] = \"Female\"\nsuicide_risk_test.loc[suicide_risk['gender'].isin([\"Transgender male\"]),\"gender\"] = \"Male\"\n\nsuicide_risk_test.loc[suicide_risk_test.improve_yourself_how.str.contains(\"Therapy\"), \"improve_yourself_how\"] = \"Therapy\"\nsuicide_risk_test.loc[suicide_risk_test.improve_yourself_how.str.contains(\"gym\"), \"improve_yourself_how\"] = \"Go to/join a gym\"\n\nimprove_freq = (suicide_risk_test['improve_yourself_how'].value_counts())/suicide_risk_test.shape[0]\nless_freq_improve = improve_freq[improve_freq<=0.2]\nsuicide_risk_test.loc[suicide_risk_test['improve_yourself_how'].isin(less_freq_improve.index.tolist()), \"improve_yourself_how\"] = \"Other\"\nsuicide_risk_test[\"improve_yourself_how\"].value_counts()\n","output":{"0":{"data":{"text/plain":"Therapy             130\nGo to/join a gym    124\nOther               109\nNone                106\nName: improve_yourself_how, dtype: int64"},"exec_count":63,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":64,"id":"3e2f9f","input":"race_freq = (suicide_risk_test2['race'].value_counts())/suicide_risk_test2.shape[0]\nless_freq_race = race_freq[race_freq<=0.04]\nsuicide_risk_test2.loc[suicide_risk_test2['race'].isin(less_freq_race.index.tolist()), \"race\"] = \"other\"\nsuicide_risk_test2[\"race\"].value_counts()\n\n#paysex_freq = (suicide_risk_test2['pay_for_sex'].value_counts())/suicide_risk_test2.shape[0]\n#less_freq_paysex = paysex_freq[paysex_freq<=0.3]\n#suicide_risk_test2.loc[suicide_risk_test2['pay_for_sex'].isin(less_freq_paysex.index.tolist()), \"pay_for_sex\"] = \"Yes\"\n#suicide_risk_test2[\"pay_for_sex\"].value_counts()\n\nsxlty_freq = (suicide_risk_test2['sexuallity'].value_counts())/suicide_risk_test2.shape[0]\nless_freq_sxlty = sxlty_freq[sxlty_freq<=0.1]\nsuicide_risk_test2.loc[suicide_risk_test2['sexuallity'].isin(less_freq_sxlty.index.tolist()), \"sexuallity\"] = \"Bi/Gay/Lesbian\"\nsuicide_risk_test2[\"sexuallity\"].value_counts()\n\nhelp_freq = (suicide_risk_test2['what_help_from_others'].value_counts())/suicide_risk_test2.shape[0]\nless_freq_help = help_freq[help_freq<=0.15]\nsuicide_risk_test2.loc[suicide_risk_test2['what_help_from_others'].isin(less_freq_help.index.tolist()), \"what_help_from_others\"] = \"Some form of help\"\nsuicide_risk_test2[\"what_help_from_others\"].value_counts()\n\nsuicide_risk_test2 = suicide_risk_test2.replace({'employment':  {'A homemaker': \"Employed\", 'Retired': \"Unemployed\", 'Military': \"Employed\", 'Unable to work': \"Unemployed\", 'Self-employed': \"Employed\", 'Out of work and looking for work': \"Unemployed\", 'Out of work but not currently looking for work': \"Unemployed\", 'Employed for wages': \"Employed\", 'A student': \"Student\"}})\n\nsuicide_risk_test2.loc[suicide_risk['gender'].isin([\"Transgender female\"]),\"gender\"] = \"Female\"\nsuicide_risk_test2.loc[suicide_risk['gender'].isin([\"Transgender male\"]),\"gender\"] = \"Male\"\n\nsuicide_risk_test2.loc[suicide_risk_test2.improve_yourself_how.str.contains(\"Therapy\"), \"improve_yourself_how\"] = \"Therapy\"\nsuicide_risk_test2.loc[suicide_risk_test2.improve_yourself_how.str.contains(\"gym\"), \"improve_yourself_how\"] = \"Go to/join a gym\"\n\nimprove_freq = (suicide_risk_test2['improve_yourself_how'].value_counts())/suicide_risk_test2.shape[0]\nless_freq_improve = improve_freq[improve_freq<=0.2]\nsuicide_risk_test2.loc[suicide_risk_test2['improve_yourself_how'].isin(less_freq_improve.index.tolist()), \"improve_yourself_how\"] = \"Other\"\nsuicide_risk_test2[\"improve_yourself_how\"].value_counts()\n\nsuicide_risk_test[\"gender\"].value_counts()","output":{"0":{"data":{"text/plain":"Male      395\nFemale     74\nName: gender, dtype: int64"},"exec_count":64,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":65,"id":"56d51f","input":"# le.fit_transform(suicide_risk_test[\"\"])\n# le = preprocessing.LabelEncoder()\n# updated_race = le.fit_transform(suicide_risk_test2['race'])\n# updated_gender = le.fit_transform(suicide_risk_test2[\"gender\"])\n# updated_sexuallity = le.fit_transform(suicide_risk_test2[\"sexuallity\"])\n# updated_bodyweight = le.fit_transform(suicide_risk_test2[\"bodyweight\"])\n# updated_virgin = le.fit_transform(suicide_risk_test2[\"virgin\"])\n# updated_prostitution_legal = le.fit_transform(suicide_risk_test2[\"prostitution_legal\"])\n# updated_pay_for_sex = le.fit_transform(suicide_risk_test2[\"pay_for_sex\"])\n# updated_social_fear = le.fit_transform(suicide_risk_test2[\"social_fear\"])\n# updated_depressed = le.fit_transform(suicide_risk_test2[\"depressed\"])\n# updated_what_help_from_others = le.fit_transform(suicide_risk_test2[\"what_help_from_others\"])\n# updated_attempt_suicide = le.fit_transform(suicide_risk_test2[\"attempt_suicide\"])\n# updated_employment = le.fit_transform(suicide_risk_test2[\"employment\"])\n# updated_improve_yourself_how = le.fit_transform(suicide_risk_test2[\"improve_yourself_how\"])","pos":7,"type":"cell"}
{"cell_type":"code","exec_count":66,"id":"3ccf22","input":"suicide_risk_test2[\"improve_yourself_how\"].value_counts()","output":{"0":{"data":{"text/plain":"Therapy             130\nGo to/join a gym    124\nOther               109\nNone                106\nName: improve_yourself_how, dtype: int64"},"exec_count":66,"output_type":"execute_result"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":67,"id":"c29f8a","input":"#\nsuicide_risk_numeric = suicide_risk_test2.select_dtypes(exclude=np.number).columns\nfrom sklearn.preprocessing import LabelEncoder\nlabel_encoder = LabelEncoder()\nfor i in suicide_risk_numeric:\n    suicide_risk_test2[i] = label_encoder.fit_transform(suicide_risk_test2[i])\nprint(\"Encoded data\")\nsuicide_risk_test2.head()","output":{"0":{"name":"stdout","output_type":"stream","text":"Encoded data\n"},"1":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gender</th>\n      <th>sexuallity</th>\n      <th>age</th>\n      <th>income</th>\n      <th>race</th>\n      <th>bodyweight</th>\n      <th>virgin</th>\n      <th>prostitution_legal</th>\n      <th>pay_for_sex</th>\n      <th>friends</th>\n      <th>social_fear</th>\n      <th>depressed</th>\n      <th>what_help_from_others</th>\n      <th>attempt_suicide</th>\n      <th>employment</th>\n      <th>job_title</th>\n      <th>edu_level</th>\n      <th>improve_yourself_how</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>35</td>\n      <td>9</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>242</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0</td>\n      <td>21</td>\n      <td>1</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>4</td>\n      <td>6</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>1</td>\n      <td>22</td>\n      <td>0</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>10.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>271</td>\n      <td>6</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>19</td>\n      <td>1</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>8.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>262</td>\n      <td>6</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>1</td>\n      <td>23</td>\n      <td>9</td>\n      <td>3</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>10.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>61</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   gender  sexuallity  age  income  race  bodyweight  virgin  \\\n0       1           1   35       9     3           0       1   \n1       1           0   21       1     3           3       1   \n2       1           1   22       0     3           2       1   \n3       1           1   19       1     3           2       1   \n4       1           1   23       9     3           2       0   \n\n   prostitution_legal  pay_for_sex  friends  social_fear  depressed  \\\n0                   0            0      0.0            1          1   \n1                   0            0      0.0            1          1   \n2                   0            0     10.0            1          1   \n3                   1            0      8.0            1          1   \n4                   0            1     10.0            0          1   \n\n   what_help_from_others  attempt_suicide  employment  job_title  edu_level  \\\n0                      1                1           0        242          0   \n1                      1                0           2          4          6   \n2                      0                0           2        271          6   \n3                      1                0           1        262          6   \n4                      0                0           0         61          3   \n\n   improve_yourself_how  \n0                     1  \n1                     2  \n2                     2  \n3                     0  \n4                     1  "},"exec_count":67,"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":68,"id":"dc2cc6","input":"suicide_risk_test[\"improve_yourself_how\"].value_counts()\n#help_cat = (suicide_risk_test['improve_yourself_how'].value_counts())/suicide_risk_test.shape[0]\n#print(help_cat)\n#suicide_risk_test[\"employment\"].value_counts()","output":{"0":{"data":{"text/plain":"Therapy             130\nGo to/join a gym    124\nOther               109\nNone                106\nName: improve_yourself_how, dtype: int64"},"exec_count":68,"output_type":"execute_result"}},"pos":12,"type":"cell"}
{"cell_type":"code","exec_count":69,"id":"541e45","input":"#print(updated_gender)\nprint(suicide_risk_test2[\"gender\"])","output":{"0":{"name":"stdout","output_type":"stream","text":"0      1\n1      1\n2      1\n3      1\n4      1\n      ..\n464    0\n465    1\n466    0\n467    1\n468    1\nName: gender, Length: 469, dtype: int64\n"}},"pos":13,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":70,"id":"0ad6a4","input":"param_grid = {\n    'bootstrap': [True],\n    'max_depth': [80],\n    'max_features': [2],\n    'min_samples_leaf': [3],\n    'min_samples_split': [8],\n    'n_estimators': [100]\n}\nrf = RandomForestClassifier()\n\ngrid_search = GridSearchCV(estimator = rf, param_grid = param_grid, cv = 3, n_jobs = -1, verbose = 2)\ngrid_search.fit(x_train, y_train)","output":{"0":{"name":"stdout","output_type":"stream","text":"Fitting 3 folds for each of 1 candidates, totalling 3 fits\n"},"1":{"data":{"text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=3, estimator=RandomForestClassifier(), n_jobs=-1,\n             param_grid={&#x27;bootstrap&#x27;: [True], &#x27;max_depth&#x27;: [80],\n                         &#x27;max_features&#x27;: [2], &#x27;min_samples_leaf&#x27;: [3],\n                         &#x27;min_samples_split&#x27;: [8], &#x27;n_estimators&#x27;: [100]},\n             verbose=2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" ><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=3, estimator=RandomForestClassifier(), n_jobs=-1,\n             param_grid={&#x27;bootstrap&#x27;: [True], &#x27;max_depth&#x27;: [80],\n                         &#x27;max_features&#x27;: [2], &#x27;min_samples_leaf&#x27;: [3],\n                         &#x27;min_samples_split&#x27;: [8], &#x27;n_estimators&#x27;: [100]},\n             verbose=2)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" ><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" ><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div>","text/plain":"GridSearchCV(cv=3, estimator=RandomForestClassifier(), n_jobs=-1,\n             param_grid={'bootstrap': [True], 'max_depth': [80],\n                         'max_features': [2], 'min_samples_leaf': [3],\n                         'min_samples_split': [8], 'n_estimators': [100]},\n             verbose=2)"},"exec_count":70,"output_type":"execute_result"}},"pos":14,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":71,"id":"b69a56","input":"target = suicide_risk_test2[\"attempt_suicide\"]\ninput_columns = suicide_risk_test2.loc[:, suicide_risk_test2.columns != \"attempt_suicide\"]\nx_train, x_test, y_train, y_test = train_test_split(input_columns, target, test_size=0.2)\n\nX = x_train\ny = y_train\n\nrand_model = RandomForestClassifier(bootstrap=True, max_depth=80, max_features=2, min_samples_leaf=3, min_samples_split=8, n_estimators=100)\nrand_model = rand_model.fit(x_train, y_train)\n\ny_pred = rand_model.predict(x_test)\nprint(y_pred)\nprint(np.array(y_test))\n\ntotal_squared_error = (np.sum((y_test - y_pred)**2))\nmean_squared_error = total_squared_error/len(y_test)\nprint(mean_squared_error)\n\nprint(classification_report(y_test, y_pred))\n\nsns.heatmap(confusion_matrix(y_test, y_pred), annot=True, fmt='g')","output":{"0":{"name":"stdout","output_type":"stream","text":"[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n[0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 1\n 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\n 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0 1]\n0.22340425531914893\n              precision    recall  f1-score   support\n\n           0       0.78      1.00      0.87        73\n           1       0.00      0.00      0.00        21\n\n    accuracy                           0.78        94\n   macro avg       0.39      0.50      0.44        94\nweighted avg       0.60      0.78      0.68        94\n\n"},"1":{"name":"stderr","output_type":"stream","text":"/projects/803caf18-2f52-4012-a187-684798bd4465/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, msg_start, len(result))\n/projects/803caf18-2f52-4012-a187-684798bd4465/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, msg_start, len(result))\n/projects/803caf18-2f52-4012-a187-684798bd4465/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, msg_start, len(result))\n"},"2":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":71,"output_type":"execute_result"},"3":{"data":{"image/png":"f299bf4a32a7c9516974484c6bae950b3d695a14","text/plain":"<Figure size 432x288 with 2 Axes>"},"exec_count":71,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":15,"type":"cell"}
{"cell_type":"code","exec_count":72,"id":"db2ac5","input":"suicide_risk_test2","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gender</th>\n      <th>sexuallity</th>\n      <th>age</th>\n      <th>income</th>\n      <th>race</th>\n      <th>bodyweight</th>\n      <th>virgin</th>\n      <th>prostitution_legal</th>\n      <th>pay_for_sex</th>\n      <th>friends</th>\n      <th>social_fear</th>\n      <th>depressed</th>\n      <th>what_help_from_others</th>\n      <th>attempt_suicide</th>\n      <th>employment</th>\n      <th>job_title</th>\n      <th>edu_level</th>\n      <th>improve_yourself_how</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>35</td>\n      <td>9</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>242</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0</td>\n      <td>21</td>\n      <td>1</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>4</td>\n      <td>6</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>1</td>\n      <td>22</td>\n      <td>0</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>10.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>271</td>\n      <td>6</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>19</td>\n      <td>1</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>8.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>262</td>\n      <td>6</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>1</td>\n      <td>23</td>\n      <td>9</td>\n      <td>3</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>10.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>61</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>464</th>\n      <td>0</td>\n      <td>1</td>\n      <td>26</td>\n      <td>2</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>10.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>42</td>\n      <td>4</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>465</th>\n      <td>1</td>\n      <td>1</td>\n      <td>31</td>\n      <td>9</td>\n      <td>3</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>10.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>218</td>\n      <td>3</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>466</th>\n      <td>0</td>\n      <td>1</td>\n      <td>17</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>20.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>254</td>\n      <td>7</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>467</th>\n      <td>1</td>\n      <td>1</td>\n      <td>18</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>16.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>171</td>\n      <td>3</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>468</th>\n      <td>1</td>\n      <td>1</td>\n      <td>28</td>\n      <td>10</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>3.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>155</td>\n      <td>4</td>\n      <td>3</td>\n    </tr>\n  </tbody>\n</table>\n<p>469 rows × 18 columns</p>\n</div>","text/plain":"     gender  sexuallity  age  income  race  bodyweight  virgin  \\\n0         1           1   35       9     3           0       1   \n1         1           0   21       1     3           3       1   \n2         1           1   22       0     3           2       1   \n3         1           1   19       1     3           2       1   \n4         1           1   23       9     3           2       0   \n..      ...         ...  ...     ...   ...         ...     ...   \n464       0           1   26       2     3           2       1   \n465       1           1   31       9     3           0       0   \n466       0           1   17       1     0           0       1   \n467       1           1   18       0     0           1       1   \n468       1           1   28      10     3           0       1   \n\n     prostitution_legal  pay_for_sex  friends  social_fear  depressed  \\\n0                     0            0      0.0            1          1   \n1                     0            0      0.0            1          1   \n2                     0            0     10.0            1          1   \n3                     1            0      8.0            1          1   \n4                     0            1     10.0            0          1   \n..                  ...          ...      ...          ...        ...   \n464                   0            2     10.0            1          0   \n465                   0            2     10.0            0          0   \n466                   0            0     20.0            1          1   \n467                   0            0     16.0            1          1   \n468                   0            2      3.0            1          1   \n\n     what_help_from_others  attempt_suicide  employment  job_title  edu_level  \\\n0                        1                1           0        242          0   \n1                        1                0           2          4          6   \n2                        0                0           2        271          6   \n3                        1                0           1        262          6   \n4                        0                0           0         61          3   \n..                     ...              ...         ...        ...        ...   \n464                      1                0           0         42          4   \n465                      0                0           0        218          3   \n466                      1                1           0        254          7   \n467                      1                0           2        171          3   \n468                      1                0           0        155          4   \n\n     improve_yourself_how  \n0                       1  \n1                       2  \n2                       2  \n3                       0  \n4                       1  \n..                    ...  \n464                     0  \n465                     2  \n466                     0  \n467                     3  \n468                     3  \n\n[469 rows x 18 columns]"},"exec_count":72,"output_type":"execute_result"}},"pos":18,"type":"cell"}
{"id":0,"time":1661438112359,"type":"user"}
{"last_load":1661438109927,"type":"file"}